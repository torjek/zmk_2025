
#include <zephyr/dt-bindings/dt-util.h>
#include <zephyr/dt-bindings/adc/adc.h>

#include <dt-bindings/zmk/matrix_transform.h>
#include <physical_layouts.dtsi>

&xiao_serial { status = "disabled"; };

/ {
	chosen {
		zmk,kscan = &matrix;
	};

	hummingbird_layout: hummingbird_layout {
		compatible = "zmk,physical-layout";
		display-name = "Default";
		
		transform = <&matrix_transform>;
		
		keys  //                     w   h    x    y     rot    rx    ry
		    = <&key_physical_attrs 100 100    0   75       0     0     0>
		    , <&key_physical_attrs 100 100  100   25       0     0     0>
		    , <&key_physical_attrs 100 100  200    0       0     0     0>
		    , <&key_physical_attrs 100 100  300   25       0     0     0>
		    , <&key_physical_attrs 100 100  400   75       0     0     0>
		    , <&key_physical_attrs 100 100  600   75       0     0     0>
		    , <&key_physical_attrs 100 100  700   25       0     0     0>
		    , <&key_physical_attrs 100 100  800    0       0     0     0>
		    , <&key_physical_attrs 100 100  900   25       0     0     0>
		    , <&key_physical_attrs 100 100 1000   75       0     0     0>
		    , <&key_physical_attrs 100 100    0  175       0     0     0>
		    , <&key_physical_attrs 100 100  100  125       0     0     0>
		    , <&key_physical_attrs 100 100  200  100       0     0     0>
		    , <&key_physical_attrs 100 100  300  125       0     0     0>
		    , <&key_physical_attrs 100 100  400  175       0     0     0>
		    , <&key_physical_attrs 100 100  600  175       0     0     0>
		    , <&key_physical_attrs 100 100  700  125       0     0     0>
		    , <&key_physical_attrs 100 100  800  100       0     0     0>
		    , <&key_physical_attrs 100 100  900  125       0     0     0>
		    , <&key_physical_attrs 100 100 1000  175       0     0     0>
		    , <&key_physical_attrs 100 100  100  225       0     0     0>
		    , <&key_physical_attrs 100 100  200  200       0     0     0>
		    , <&key_physical_attrs 100 100  300  225       0     0     0>
		    , <&key_physical_attrs 100 100  700  225       0     0     0>
		    , <&key_physical_attrs 100 100  800  200       0     0     0>
		    , <&key_physical_attrs 100 100  900  225       0     0     0>
		    , <&key_physical_attrs 100 100  325  350       0     0     0>
		    , <&key_physical_attrs 100 100  425  375       0     0     0>
		    , <&key_physical_attrs 100 100  575  375       0     0     0>
		    , <&key_physical_attrs 100 100  675  350       0     0     0>
		    ;
	};
	
	left_mux: left_mux {
		compatible = "zmk,gpio-mux";
		select-gpios
			= <&xiao_d 1 GPIO_ACTIVE_HIGH>
		        , <&xiao_d 2 GPIO_ACTIVE_HIGH>
		        , <&xiao_d 3 GPIO_ACTIVE_HIGH>
			;

		en-gpios = <&xiao_d 6 GPIO_ACTIVE_LOW>;

		gpio-controller;
		ngpios = <8>;
		#gpio-cells = <2>;
	};

	right_mux: right_mux {
		compatible = "zmk,gpio-mux";
		select-gpios
			= <&xiao_d 1 GPIO_ACTIVE_HIGH>
		        , <&xiao_d 2 GPIO_ACTIVE_HIGH>
		        , <&xiao_d 3 GPIO_ACTIVE_HIGH>
			;

		en-gpios = <&xiao_d 5 GPIO_ACTIVE_LOW>;

		gpio-controller;
		ngpios = <8>;
		#gpio-cells = <2>;
	};

	matrix: matrix {
		compatible = "zmk,kscan-ec-matrix";

		matrix-relax-us = <1000>;
		adc-read-settle-us = <1>;

		strobe-gpios
			= <&xiao_d 10 GPIO_ACTIVE_HIGH>
		        , <&xiao_d 9 GPIO_ACTIVE_HIGH>
		        , <&xiao_d 8 GPIO_ACTIVE_HIGH>
		        , <&xiao_d 7 GPIO_ACTIVE_HIGH>
			;

		input-gpios
			= <&left_mux 2 0>
			, <&left_mux 1 0>
			, <&left_mux 0 0>
			, <&left_mux 3 0>
			, <&left_mux 5 0>
			, <&left_mux 7 0>
			, <&right_mux 4 0>
			, <&right_mux 6 0>
			, <&right_mux 2 0>
			, <&right_mux 1 0>
			, <&right_mux 0 0>
			, <&right_mux 3 0>
			;

		drain-gpios = <&xiao_d 4 GPIO_ACTIVE_HIGH>;
		// io-channels = <&xiao_adc 0>;
		strobe-input-masks = <
			0
			0
			0
			(BIT(0) + BIT(1) + BIT(2) + BIT(9) + BIT(10) + BIT(11))
			>;
	};

	matrix_transform: matrix_transform {
		compatible = "zmk,matrix-transform";

		columns = <10>;
		rows = <4>;
	
		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
        RC(2,1) RC(2,2) RC(2,3)                 RC(2,4) RC(2,5) RC(2,6)
                	RC(3,10) RC(3,10) RC(3,11) RC(3,11) 
		>;
	};
	
};
